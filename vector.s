* 6809 assembly program generated by cmoc 0.1.85


	SECTION	code


_isCoCo3	IMPORT
_textScreenWidth	IMPORT
_textScreenHeight	IMPORT
___va_arg	IMPORT
_abs	IMPORT
_adddww	IMPORT
_atanf	IMPORT
_atoff	IMPORT
_atoi	IMPORT
_atol	IMPORT
_atoui	IMPORT
_atoul	IMPORT
_attr	IMPORT
_bsearch	IMPORT
_cls	IMPORT
_cmp	IMPORT
_cmpdww	IMPORT
_coldStart	IMPORT
_cosf	IMPORT
_delay	IMPORT
_divdwb	IMPORT
_divdww	IMPORT
_divmod16	IMPORT
_divmod8	IMPORT
_dwtoa	IMPORT
_enableCMOCFloatSupport	IMPORT
_exit	IMPORT
_expf	IMPORT
_fabsf	IMPORT
_floorf	IMPORT
_ftoa	IMPORT
_getTextMode	IMPORT
_hscreen	IMPORT
_hset	IMPORT
_initCoCoSupport	IMPORT
_inkey	IMPORT
_isKeyPressed	IMPORT
_isalnum	IMPORT
_isalpha	IMPORT
_isdigit	IMPORT
_isspace	IMPORT
_itoa10	IMPORT
_labs	IMPORT
_locate	IMPORT
_logf	IMPORT
_ltoa10	IMPORT
_memchr	IMPORT
_memcmp	IMPORT
_memcpy	IMPORT
_memichr	IMPORT
_memicmp	IMPORT
_memmove	IMPORT
_memset	IMPORT
_memset16	IMPORT
_mulwb	IMPORT
_mulww	IMPORT
_palette	IMPORT
_paletteRGB	IMPORT
_pcls	IMPORT
_pmode	IMPORT
_printf	IMPORT
_putchar	IMPORT
_putstr	IMPORT
_qsort	IMPORT
_rand	IMPORT
_readDECBFile	IMPORT
_readJoystickButtons	IMPORT
_readJoystickPositions	IMPORT
_readline	IMPORT
_readword	IMPORT
_resetPalette	IMPORT
_rgb	IMPORT
_roundf	IMPORT
_sbrk	IMPORT
_sbrkmax	IMPORT
_screen	IMPORT
_setBorderColor	IMPORT
_setCaseFlag	IMPORT
_setConsoleOutHook	IMPORT
_setHighSpeed	IMPORT
_setOutputDevice	IMPORT
_setPmodeGraphicsAddressEx	IMPORT
_setSAMRegisters	IMPORT
_set_null_ptr_handler	IMPORT
_set_stack_overflow_handler	IMPORT
_showGraphicsAddress	IMPORT
_showLowResTextAddress	IMPORT
_showPmode4	IMPORT
_sinf	IMPORT
_sleep	IMPORT
_sound	IMPORT
_sprintf	IMPORT
_sqrt16	IMPORT
_sqrt32	IMPORT
_sqrtf	IMPORT
_srand	IMPORT
_strcat	IMPORT
_strchr	IMPORT
_strcmp	IMPORT
_strcpy	IMPORT
_stricmp	IMPORT
_strlen	IMPORT
_strlwr	IMPORT
_strncmp	IMPORT
_strncpy	IMPORT
_strstr	IMPORT
_strtof	IMPORT
_strtol	IMPORT
_strtoul	IMPORT
_strupr	IMPORT
_subdww	IMPORT
_tanf	IMPORT
_tolower	IMPORT
_toupper	IMPORT
_truncf	IMPORT
_ultoa10	IMPORT
_utoa10	IMPORT
_vprintf	IMPORT
_vsprintf	IMPORT
_waitkey	IMPORT
_width	IMPORT
_zerodw	IMPORT
_vec_sum	EXPORT


*******************************************************************************

* FUNCTION vec_sum(): defined at vector.c:8
_vec_sum	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-30,S
* Formal parameter(s):
*      6,U:    2 bytes: v1: struct vector_type *
*      8,U:    2 bytes: v2: struct vector_type *
* Local non-static variable(s):
*    -30,U:   15 bytes: v3: struct vector_type
*    -15,U:    5 bytes: $V00130: float
*    -10,U:    5 bytes: $V00131: float
*     -5,U:    5 bytes: $V00132: float
* Line vector.c:10: init of variable v3
* Push right operand of add.
	LDX	8,U		variable v2
	PSHS	X
* Push left operand of add.
	LDX	6,U		variable v1
	PSHS	X
	LEAX	-15,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-30,U		offset in variable v3
	LBSR	copySingle	preserves X
* Push right operand of add.
	LDX	8,U		variable v2
	LEAX	5,X		member y of vector_type
	PSHS	X
* Push left operand of add.
	LDX	6,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
	LEAX	-10,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-25,U		offset in variable v3
	LBSR	copySingle	preserves X
* Push right operand of add.
	LDX	8,U		variable v2
	LEAX	10,X		member z of vector_type
	PSHS	X
* Push left operand of add.
	LDX	6,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
	LEAX	-5,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-20,U		offset in variable v3
	LBSR	copySingle	preserves X
* Line vector.c:11: return struct/union by value
	LEAX	-30,U		variable `v3', declared at vector.c:10
	PSHS	X		source struct/union
	LDX	4,U		address of return value
	LDD	#15		size of struct vector_type
	LBSR	copyMem
	LEAS	2,S		discard copyMem argument
* optim: branchToNextLocation
* Useless label L00125 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION vec_sum(): defined at vector.c:8
funcend_vec_sum	EQU *
funcsize_vec_sum	EQU	funcend_vec_sum-_vec_sum
_vec_diff	EXPORT


*******************************************************************************

* FUNCTION vec_diff(): defined at vector.c:15
_vec_diff	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-30,S
* Formal parameter(s):
*      6,U:    2 bytes: v1: struct vector_type *
*      8,U:    2 bytes: v2: struct vector_type *
* Local non-static variable(s):
*    -30,U:   15 bytes: v3: struct vector_type
*    -15,U:    5 bytes: $V00133: float
*    -10,U:    5 bytes: $V00134: float
*     -5,U:    5 bytes: $V00135: float
* Line vector.c:17: init of variable v3
* Push right operand of sub.
	LDX	8,U		variable v2
	PSHS	X
* Push left operand of sub.
	LDX	6,U		variable v1
	PSHS	X
	LEAX	-15,U		temporary destination, type float
	LBSR	subSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-30,U		offset in variable v3
	LBSR	copySingle	preserves X
* Push right operand of sub.
	LDX	8,U		variable v2
	LEAX	5,X		member y of vector_type
	PSHS	X
* Push left operand of sub.
	LDX	6,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
	LEAX	-10,U		temporary destination, type float
	LBSR	subSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-25,U		offset in variable v3
	LBSR	copySingle	preserves X
* Push right operand of sub.
	LDX	8,U		variable v2
	LEAX	10,X		member z of vector_type
	PSHS	X
* Push left operand of sub.
	LDX	6,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
	LEAX	-5,U		temporary destination, type float
	LBSR	subSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-20,U		offset in variable v3
	LBSR	copySingle	preserves X
* Line vector.c:18: return struct/union by value
	LEAX	-30,U		variable `v3', declared at vector.c:17
	PSHS	X		source struct/union
	LDX	4,U		address of return value
	LDD	#15		size of struct vector_type
	LBSR	copyMem
	LEAS	2,S		discard copyMem argument
* optim: branchToNextLocation
* Useless label L00126 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION vec_diff(): defined at vector.c:15
funcend_vec_diff	EQU *
funcsize_vec_diff	EQU	funcend_vec_diff-_vec_diff
_vec_dot	EXPORT


*******************************************************************************

* FUNCTION vec_dot(): defined at vector.c:22
_vec_dot	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-25,S
* Formal parameter(s):
*      6,U:    2 bytes: v1: struct vector_type *
*      8,U:    2 bytes: v2: struct vector_type *
* Local non-static variable(s):
*    -25,U:    5 bytes: $V00136: float
*    -20,U:    5 bytes: $V00137: float
*    -15,U:    5 bytes: $V00138: float
*    -10,U:    5 bytes: $V00139: float
*     -5,U:    5 bytes: $V00140: float
* Push right operand of add.
* Push right operand of mul.
	LDX	8,U		variable v2
	LEAX	10,X		member z of vector_type
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
	LEAX	-5,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
* Push left operand of add.
* Push right operand of add.
* Push right operand of mul.
	LDX	8,U		variable v2
	LEAX	5,X		member y of vector_type
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
	LEAX	-10,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
* Push left operand of add.
* Push right operand of mul.
	LDX	8,U		variable v2
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	PSHS	X
	LEAX	-15,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
	LEAX	-20,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
	LEAX	-25,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		source float
	LDX	4,U		address of return value
	LBSR	copySingle
* optim: branchToNextLocation
* Useless label L00127 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION vec_dot(): defined at vector.c:22
funcend_vec_dot	EQU *
funcsize_vec_dot	EQU	funcend_vec_dot-_vec_dot
_vec_scale	EXPORT


*******************************************************************************

* FUNCTION vec_scale(): defined at vector.c:28
_vec_scale	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-30,S
* Formal parameter(s):
*      6,U:    5 bytes: fact: float
*     11,U:    2 bytes: v1: struct vector_type *
* Local non-static variable(s):
*    -30,U:   15 bytes: scale: struct vector_type
*    -15,U:    5 bytes: $V00141: float
*    -10,U:    5 bytes: $V00142: float
*     -5,U:    5 bytes: $V00143: float
* Line vector.c:30: init of variable scale
* Push right operand of mul.
	LDX	11,U		variable v1
	PSHS	X
* Push left operand of mul.
	LEAX	6,U		variable `fact', declared at vector.c:28
	PSHS	X
	LEAX	-15,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-30,U		offset in variable scale
	LBSR	copySingle	preserves X
* Push right operand of mul.
	LDX	11,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
* Push left operand of mul.
	LEAX	6,U		variable `fact', declared at vector.c:28
	PSHS	X
	LEAX	-10,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-25,U		offset in variable scale
	LBSR	copySingle	preserves X
* Push right operand of mul.
	LDX	11,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
* Push left operand of mul.
	LEAX	6,U		variable `fact', declared at vector.c:28
	PSHS	X
	LEAX	-5,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	TFR	X,D		address of source number
	LEAX	-20,U		offset in variable scale
	LBSR	copySingle	preserves X
* Line vector.c:31: return struct/union by value
	LEAX	-30,U		variable `scale', declared at vector.c:30
	PSHS	X		source struct/union
	LDX	4,U		address of return value
	LDD	#15		size of struct vector_type
	LBSR	copyMem
	LEAS	2,S		discard copyMem argument
* optim: branchToNextLocation
* Useless label L00128 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION vec_scale(): defined at vector.c:28
funcend_vec_scale	EQU *
funcsize_vec_scale	EQU	funcend_vec_scale-_vec_scale
_vec_len	EXPORT


*******************************************************************************

* FUNCTION vec_len(): defined at vector.c:34
_vec_len	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-35,S
* Formal parameter(s):
*      6,U:    2 bytes: v1: struct vector_type *
* Local non-static variable(s):
*    -35,U:    5 bytes: v: float
*    -30,U:    5 bytes: $V00144: float
*    -25,U:    5 bytes: $V00145: float
*    -20,U:    5 bytes: $V00146: float
*    -15,U:    5 bytes: $V00147: float
*    -10,U:    5 bytes: $V00148: float
*     -5,U:    5 bytes: $V00149: float
* Line vector.c:36: init of variable v
* Line vector.c:36: function call: sqrtf()
* Push right operand of add.
* Push right operand of mul.
	LDX	6,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	LEAX	10,X		member z of vector_type
	PSHS	X
	LEAX	-5,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
* Push left operand of add.
* Push right operand of add.
* Push right operand of mul.
	LDX	6,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	LEAX	5,X		member y of vector_type
	PSHS	X
	LEAX	-10,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
* Push left operand of add.
* Push right operand of mul.
	LDX	6,U		variable v1
	PSHS	X
* Push left operand of mul.
	LDX	6,U		variable v1
	PSHS	X
	LEAX	-15,U		temporary destination, type float
	LBSR	mulSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
	LEAX	-20,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	PSHS	X
	LEAX	-25,U		temporary destination, type float
	LBSR	addSingleSingle	preserves X
	LEAS	4,S
	LEAS	-5,S		pass float by value
	LBSR	push5ByteStruct	argument 1 of sqrtf(): float
	LEAX	-30,U		address of struct/union to be returned by sqrtf()
	PSHS	X		hidden argument
	LBSR	_sqrtf
	LEAS	7,S
	LEAX	-30,U		address of struct/union returned by sqrtf()
	TFR	X,D		address of source number in D
	LEAX	-35,U		address of variable to init: v
	LBSR	initSingleFromSingle
	LEAX	-35,U		variable `v', declared at vector.c:36
	TFR	X,D		source float
	LDX	4,U		address of return value
	LBSR	copySingle
* optim: branchToNextLocation
* Useless label L00129 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION vec_len(): defined at vector.c:34
funcend_vec_len	EQU *
funcsize_vec_len	EQU	funcend_vec_len-_vec_len


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 8 utility routine(s).
_sqrtf	IMPORT
addSingleSingle	IMPORT
copyMem	IMPORT
copySingle	IMPORT
initSingleFromSingle	IMPORT
mulSingleSingle	IMPORT
push5ByteStruct	IMPORT
subSingleSingle	IMPORT


*******************************************************************************

	END
